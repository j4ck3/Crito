@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage<ContentModels.PageWithArticles>
@using ContentModels = Umbraco.Cms.Web.Common.PublishedModels;
@using Umbraco.Cms.Core.Models.PublishedContent;
@{
    Layout = "_Layout.cshtml";
    ViewData["Title"] = @Model.Value("pageTitle");
    ViewData["Description"] = @Model.Value("pageDescription");
    ViewData["Keys"] = @Model.Value("pageKeys");

    var category = Context.Request.Query["category"].ToString();
    var selection = Umbraco.Content(Guid.Parse("396b1442-593b-48bf-82e7-72acb785dec3"))?
    .ChildrenOfType("articleDoc")?
    .Where(x => x.IsVisible());

    if (!string.IsNullOrEmpty(category))
    {
        selection = selection?.Where(x => x.Value<string>("articleCategory") == category);
    }

    //pagination
    var itemsPerPage = 6;
    var pageNumber = 1;

    if (!int.TryParse(Context.Request.Query["page"], out pageNumber))
        pageNumber = 1;

    var selectionCount = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((pageNumber - 1) * itemsPerPage).Take(itemsPerPage);
}

@await Html.PartialAsync("_Nav")
@await Html.PartialAsync("_breadcrumb")

<div class="container my-5">
    @if (pagedItems != null)
    {
        <div class="row row-cols-1 row-cols-md-2 gy-md-4 gy-1">
            @foreach (var item in pagedItems)
            {
                var img = item.Value<IPublishedContent>("articleImage");
                <div class="col col-md-4">
                    <div class="article-body mx-auto">
                        <a href="@item.Url()">
                            <div class="position-relative">
                                <img class="article-img" src="@img?.Url()" alt="@item.Name()" />
                                <div class="position-absolute top-0 start-0 p-2 m-2 z-4 bg-theme-yellow ">
                                    <p class="text-center m-0 weight-bold">@item.CreateDate.ToString("dd")</p>
                                    <p class="text-center m-0">@item.CreateDate.ToString("MMM")</p>
                                </div>
                            </div>
                            <p class="font-inter text-opacity-75 my-4">@item.Value("articleCategory")</p>
                            <h4 class="weight-bold fs-4">@item.Name()</h4>
                            <p class="font-inter text-opacity-75">@item.Value("articleIntro")</p>
                        </a>
                    </div>
                </div>
            }
        </div>

    }
    else
    {
        <h1 class="text-center">No articles yet.</h1>
    }
    

    <nav class="d-flex justify-content-center my-4">
        @if(pageNumber > 1)
        {
            <a class="pagination-btn me-3" href="?page=@(pageNumber - 1)" aria-label="previus" aria-hidden="true" title="previus page">
                <i class="fa-solid fa-chevron-left"></i>
            </a>  
        }
    
        @for (int i = 1; i <= Math.Ceiling((decimal)selectionCount / itemsPerPage); i++ )
        {
            if(i == pageNumber)
            {
                <a class="pagination-btn pagination-btn-active" href="?page=@i" aria-label="page @i" aria-hidden="true" title="active page">@i</a>
            }else
            {
                <a class="pagination-btn" href="?page=@i" title="page @i">@i</a>
            }
        }
    
        @if(pageNumber < Math.Ceiling((decimal)selectionCount / itemsPerPage))
        {
            <a class="pagination-btn ms-2" href="?page=@(pageNumber + 1)" aria-label="next" aria-hidden="true" title="next page">
                <i class="fa-solid fa-chevron-right"></i>
            </a>
        }
    </nav>
    
</div>

@await Html.PartialAsync("_NewsSignup")
@await Html.PartialAsync("_Footer")
